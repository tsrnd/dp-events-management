swagger: '2.0'
info:
  version: 0.0.1
  title: Events Management API
consumes:
  - multipart/form-data
produces:
  - application/json
schemes:
  - http
  - https
securityDefinitions:
 Bearer:
  description: |
   For accessing the API a valid JWT token must be passed in all the queries in
   the 'Authorization' header.
   A valid JWT token is generated by the API and retourned as answer of a call
   to the route /login giving a valid user & password.
   The following syntax must be used in the 'Authorization' header :
   Bearer: xxxxxx.yyyyyyy.zzzzzz
  type: apiKey
  name: Authorization
  in: header
definitions:
  ErrorDetails:
      title: Error details
      type: object
      properties:
        message:
          type: string
          description: error messages
        errors:
          type: array
          items:
            description: error detail
            type: string
  Page:
    type: integer
    description:
      from request parameter
    example: 2
  NextPageFlg:
    type: boolean
    description:
      result about whether next page exists."True" means next page exists,"False" means next page not existx
  Event:
    type: object
    properties:
      title:
        type: string
        description: title of event(except for "#")
        example: abc
      start_date:
        type: string
        description: event start date
        example: "2006-10-25"
      end_date:
        type: string
        description: event end date
        example: "2006-10-25"
      start_time:
        type: string
        description: event start time
        example: "6:00:00+00"
      end_time:
        type: string
        description: event end time
        example: "10:00:00+00"
      location:
        type: string
        description: Event location
        example: "10 Bạch Đằng, Đà Nẵng"
      time_notication:
        type: string
        description: Time notication
        example: "2006-10-26 00:00:00+00"
      owner:
        type: integer
        description: User create event
        example: 1
      event_content:
        type: string
        description: Event Content
        example: "meeting team"
      file_attack:
        type: string
        description: File attack
        example: "abc.pdf"
      guest_can_invite:
        type: boolean
        description: Guest can invite
        example: true
      view_all_guest:
        type: boolean
        description: View all guest
        example: false
      item_preparing:
        type: string
        description: Item preparing
        example: "money"
      status:
        type: integer
        description: status event
        example: 1
      time_create:
        type: string
        description: Time create
        example: "2006-10-29 00:00:00+00"
      last_edit:
        type: string
        description: Time create
        example: "00:00:00+00"
      user_edit:
        type: integer
        description: user edit event
        example: 1

parameters:
  Id_event:
    name: id_event
    in: path
    description: id of event
    required: true
    type: integer
  Title:
    name: title
    description: title event
    in: formData
    type: string
    required: true
  Start_date:
    name: start_date
    description: event start date
    in: formData
    required: true
    type: string
  End_date:
    name: end_date
    description: event end date
    in: formData
    required: true
    type: string
  Start_time:
    name: start_time
    description: event start time
    in: formData
    required: true
    type: string
  End_time:
    name: end_time
    description: event end time
    in: formData
    required: true
    type: string
  Location:
    name: location
    description: Event location
    in: formData
    required: true
    type: string
  Time_notication:
    name: time_notication
    description: Time notication
    in: formData
    required: true
    type: string
  Owner:
    name: owner
    description: User create event
    in: formData
    required: True
    type: integer
  Event_content:
    name: event_content
    description: Event Content
    in: formData
    required: true
    type: string
  File_attack:
    name: file_attack
    description: File attack
    in: formData
    required: false
    type: string
  Guest_can_invite:
    name: guest_can_invite
    description: Guest can invite
    in: formData
    required: true
    type: boolean
  View_all_guest:
    name: view_all_guest
    description: View all guest
    in: formData
    required: true
    type: boolean
  Item_preparing:
    name: item_preparing
    description: Item preparing
    in: formData
    required: false
    type: string
  Time_create:
    name: time_create
    description: Time create
    in: formData
    required: true
    type: string
  Last_edit:
    name: last_edit
    description: Time last edit
    in: formData
    required: false
    type: string
  User_edit:
    name: user_edit
    description: user edit
    in: formData
    required: false
    type: integer
  Status:
    name: status
    description: status event
    in: formData
    required: true
    type: integer
  Page:
    name: page
    in: query
    description:  |  
     specify the number of page.  
     if not seted,the number of page is 1.
    required: false
    type: integer
  ResultLimit:
    name: result_limit
    in: query
    required: false
    type: integer
paths:
  /api/events/:
    get:
      summary: Return list events.
      tags:
        - Events
      description: |  
           returns list of information about "events".
      parameters:
        - $ref: '#/parameters/ResultLimit'
        - $ref: '#/parameters/Page'
        - name: is_public
          in: query
          description: is event public
          required: false
          type: boolean
        - name: owner
          in: query
          description: is owner
          required: false
          type: integer
        - name: status
          in: query
          description: status event
          required: false
          type: integer
        - name: start_date
          in: query
          description: start date event
          required: false
          type: string
        - name: end_date
          in: query
          description: end date event
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              result_count:
                type: integer
                description: 'Count of result in this response'
              page:
                $ref: '#/definitions/Page'
              next_page_flg:
                $ref: '#/definitions/NextPageFlg'
              event_list:
                type: array
                description: events sorted by DESC
                items:
                  $ref: '#/definitions/Event'
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
    post:
      summary: create the event
      tags:
       - Events
      description: Create the event
      parameters:
        - $ref: '#/parameters/Title'
        - $ref: '#/parameters/Start_date'
        - $ref: '#/parameters/End_date'
        - $ref: '#/parameters/Start_time'
        - $ref: '#/parameters/End_time'
        - $ref: '#/parameters/Location'
        - $ref: '#/parameters/Time_notication'
        - $ref: '#/parameters/Owner'
        - $ref: '#/parameters/Event_content'
        - $ref: '#/parameters/File_attack'
        - $ref: '#/parameters/Guest_can_invite'
        - $ref: '#/parameters/View_all_guest'
        - $ref: '#/parameters/Item_preparing'
        - $ref: '#/parameters/Time_create'
        - $ref: '#/parameters/Last_edit'
        - $ref: '#/parameters/User_edit'
        - $ref: '#/parameters/Status'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
  /api/events/{id_event}/:
    get:
      summary: Return the detail event.
      tags:
        - Events
      description: returns detail of a event.
      parameters:
        - $ref: '#/parameters/Id_event'
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response 
            $ref: '#/definitions/Event'          
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
    put:
      summary: update the detail event information
      tags:
       - Events
      description: |
        "First": 
          Check owner of event with id_user login
          - if True -> delete
          - if false -> return 403 error
        "Finally": return result 
      parameters:
        - $ref: '#/parameters/Id_event'
        - $ref: '#/parameters/Title'
        - $ref: '#/parameters/Start_date'
        - $ref: '#/parameters/End_date'
        - $ref: '#/parameters/Start_time'
        - $ref: '#/parameters/End_time'
        - $ref: '#/parameters/Location'
        - $ref: '#/parameters/Time_notication'
        - $ref: '#/parameters/Owner'
        - $ref: '#/parameters/Event_content'
        - $ref: '#/parameters/File_attack'
        - $ref: '#/parameters/Guest_can_invite'
        - $ref: '#/parameters/View_all_guest'
        - $ref: '#/parameters/Item_preparing'
        - $ref: '#/parameters/Time_create'
        - $ref: '#/parameters/Last_edit'
        - $ref: '#/parameters/User_edit'
        - $ref: '#/parameters/Status'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorDetails'
        '403':
          description: Forbiden
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
    delete:
      summary: Delete the event
      tags:
        - Events
      description: |
        "First": 
          Check owner of event with id_user login
          - if True -> delete
          - if false -> return 403 error
        "Finally": return result 
      parameters:
        - $ref: '#/parameters/Id_event'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorDetails'
        '403':
          description: Forbiden
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
  /api/users/:
    get:
      summary: Return list users.
      tags:
        - Users
      description: returns list of information about "users". filtering if parameter setted
      parameters:
        - $ref: '#/parameters/ResultLimit'
        - $ref: '#/parameters/Page'
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              result_count:
               type: integer
               description:
                Count of result in this response
              user_list:
                type: array
                description: users sorted by DESC
                items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: id of user
                        example: 1
                      username:
                        type: string
                        description: username of user
                        example: "user1"
                      first_name:
                        type: string
                        description: first name of user
                        example: "Nghia"
                      last_name:
                        type: string
                        description: last name of user
                        example: "Vo"
                      email:
                        type: string
                        description: email of user
                        example: "nghia.vo@asiantech.vn"
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
  /api/invites/{id_event}/:
    post:
      summary: create invitation user to join event
      tags:
        - Invitation
      description: Create invite event
      parameters:
        - $ref: '#/parameters/Id_event'
        - name: user_id
          description: id of user
          in: formData
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails' 
    delete:
      summary: Delete invited user to the event
      tags:
       - Invitation
      description: Delete invited user to the event
      parameters:
        - $ref: '#/parameters/Id_event'
        - name: user_id
          description: id of user
          in: formData
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails' 
